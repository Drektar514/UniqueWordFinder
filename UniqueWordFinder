using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace UniqueWordFinder
{
    class Program
    {
        static void Main(string[] args)
        {
            string readPath = "Book.txt";
            string writePath = "Result.txt";
            string text;
            string word;
            string checkingWord;
            bool haveWord;
            int wordCount = 0;
            char[] separators = new char[] { ' ', '.',',' };
            string[] wordsFromText;

            Dictionary<string, int> uniqueWords = new Dictionary<string, int>();

            using (var sr = new StreamReader(readPath))
            {
                text = sr.ReadToEnd();
                wordsFromText = text.Split(separators, StringSplitOptions.RemoveEmptyEntries);
            }

            for (int i = 0; i < wordsFromText.Length; i++)
            {                        
                word = wordsFromText[i];
                haveWord = uniqueWords.ContainsKey(word);
                if (haveWord)
                    continue;
                for (int j = i; j < wordsFromText.Length; j++)
                {
                    checkingWord = wordsFromText[j];
                    if (word.ToLower().Equals(checkingWord.ToLower()))
                        wordCount++;
                }
                uniqueWords.Add(word, wordCount);
                wordCount = 0;
            }
            uniqueWords = uniqueWords.OrderByDescending(pair => pair.Value).ToDictionary(pair => pair.Key, pair => pair.Value);
           
            using (var sw = new StreamWriter(writePath))
            {
                foreach (var item in uniqueWords)
                {
                    sw.WriteLine(item.Key + " " + item.Value);
                }
            }
        }
    }
}
